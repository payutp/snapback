<%= javascript_tag do %>
  window.alltags = <%=raw Tag.all.to_json %>;
<% end %>

<div class="modal hide fade">
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h3> What would you like to borrow? </h3>
    <div>
      <div class="modal-body">
<!--
<p>
<%= form_tag('/lends/', :method => :post, :html => { :multipart => true })  %>

  <div>
    <span class="label">From:</span> <%= current_user.email %>
  </div>

</br>
  <div class="field">
    <span class="label">Item:</span> <%= text_field_tag "item_name" %>
  </div>
  <div class="field">
    <span class="label">Tags:</span>   <%= text_field_tag "tags" %>
  </div>

  <div class="field">
    <span class="label">Photo:</span> <%= file_field_tag 'photo', :class => "btn" %>
  </div>
  
  <div class="actions">
    <%= submit_tag 'Create Request', :class => "btn btn-small btn-success" %>
  </div>
</p>-->
<%= form_for @lend, :url => lends_path, :html => { :multipart => true } do |f| %>

  <div>
    <span class="label">From:</span> <%= current_user.email %>
  </div>

</br>
  <div class="field">
    <span class="label">Item:</span> <%= text_field_tag "item_name" %>
  </div>
  <div class="field">
    <span class="label">Tags:</span>   <%= text_field_tag "tags" %>
  </div>

  <div class="field">
    <span class="label">Photo:</span> <%= f.file_field :photo %>
  </div>
  <div class="actions">
    <%= submit_tag 'Create Request', :class => "btn btn-small btn-success" %>
  </div>
  <% end %>
</div>
</div>

  <script>
    $(function() {
    var availableTags = window.alltags.map(function (tag) {
      return tag.tag;
    });
    function split( val ) {
      return val.split( /,\s*/ );
    }
    function extractLast( term ) {
      return split( term ).pop();
    }
 
    $( "#tags" )
      // don't navigate away from the field on tab when selecting an item
      .bind( "keydown", function( event ) {
        if ( event.keyCode === $.ui.keyCode.TAB &&
            $( this ).data( "ui-autocomplete" ).menu.active ) {
          event.preventDefault();
        }
        if ( event.keyCode === 13) {
          event.preventDefault();
        }
      })
      .autocomplete({
        minLength: 0,
        source: function( request, response ) {
          // delegate back to autocomplete, but extract the last term
          response( $.ui.autocomplete.filter(
            availableTags, extractLast( request.term ) ) );
        },
        focus: function() {
          // prevent value inserted on focus
          return false;
        },
        select: function( event, ui ) {
          var terms = split( this.value );
          // remove the current input
          terms.pop();
          // add the selected item
          terms.push( ui.item.value );
          // add placeholder to get the comma-and-space at the end
          terms.push( "" );
          this.value = terms.join( ", " );
          return false;
        }
      });
  });
  </script>
